plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.neoulsoft'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    provided
    providedRuntime
}

sourceSets {
    main { compileClasspath += configurations.provided }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'net.javacrumbs.shedlock:shedlock-spring:5.2.0'
    implementation 'net.javacrumbs.shedlock:shedlock-provider-jdbc-template:5.2.0'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.security.oauth:spring-security-oauth2'
    implementation 'org.springframework.security:spring-security-jwt'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.6.8'
    implementation 'com.auth0:java-jwt:4.3.0'
    implementation 'com.auth0:jwks-rsa:0.22.0'

    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    implementation 'org.springframework.mobile:spring-mobile-device:1.1.5.RELEASE'

    implementation 'com.amazonaws:aws-java-sdk-ses:1.11.227'
    implementation 'software.amazon.awssdk:ses:2.10.25'

    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.1000')
    implementation 'com.amazonaws:aws-java-sdk-s3'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'

    implementation 'org.apache.commons:commons-rng-simple:1.5'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.commons:commons-text:1.10.0'
    implementation 'org.apache.commons:commons-pool2:2.11.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'org.jsoup:jsoup:1.15.4'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'mysql:mysql-connector-java'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    // apple silicon only
    def isMacOS = System.getProperty("os.name").startsWith("Mac OS X")
    def architecture = System.getProperty("os.arch").toLowerCase()
    if (isMacOS && architecture == "aarch64") {
        implementation("io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64")
    }

}
